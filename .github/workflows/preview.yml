name: PR Preview

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

jobs:
  build-and-deploy-preview:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
          
      - name: Setup Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests
        run: pnpm test -- --run
        
      - name: Build React app with PR preview path
        run: pnpm run build
        env:
          REACT_APP_PR_PATH: previews/pr-${{ github.event.pull_request.number }}
        
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          destination_dir: previews/pr-${{ github.event.pull_request.number }}
          keep_files: true
          
      - name: Comment PR with preview link
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const previewUrl = `https://danhecker.com/previews/pr-${prNumber}`;
            
            const commentBody = `## 🎨 Preview Build Ready!
            
            ✅ Tests passed successfully!
            
            ### 🌐 Live Preview
            
            Your changes are now deployed and ready to review:
            
            **[🔗 View Preview Site](${previewUrl})**
            
            The preview will be automatically updated with each new commit to this PR.
            
            ---
            *Preview deployed from commit ${context.sha.substring(0, 7)}*`;
            
            // Find existing comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('Preview Build Ready')
            );
            
            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: commentBody
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: commentBody
              });
            }
