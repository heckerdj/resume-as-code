name: Build, Test, and Deploy

on:
  push:
    branches: [main]
  
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]
  
  workflow_dispatch:
    inputs:
      preview:
        description: 'Deploy as preview'
        required: true
        default: true
        type: boolean

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  # Determine if the deployment is a preview (for PRs or manual trigger with preview input) or if it is a 'production' deploy (push to main branch).
  IS_PREVIEW: ${{ github.event_name == 'pull_request' || (github.event_name == 'workflow_dispatch' && github.event.inputs.preview == 'true') }}

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Run tests
        run: pnpm test run
        
      - name: Build React app
        run: pnpm run build
        
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'

  # Deployment job
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          preview: ${{ env.IS_PREVIEW }}

      - name: Comment PR with preview link
        if: ${{ env.IS_PREVIEW && github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const previewUrl = `${{ steps.deployment.outputs.page_url }}`;
            
            const commentBody = `## 🎨 Preview Build Ready!
            
            ✅ Tests passed successfully!
            
            ### 🌐 [Live Preview](${previewUrl})
                        
            The preview will be automatically updated with each new commit to this PR.
            
            ---
            *Preview deployed from commit ${context.sha.substring(0, 7)}*`;
            
            // Find existing comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('Preview Build Ready')
            );
            
            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: commentBody
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: commentBody
              });
            }
